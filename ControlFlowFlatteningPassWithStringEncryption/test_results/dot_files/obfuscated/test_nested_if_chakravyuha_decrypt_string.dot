digraph "CFG for 'chakravyuha_decrypt_string' function" {
	label="CFG for 'chakravyuha_decrypt_string' function";

	Node0x57c4eb7dc5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{entry:\l|  %cff.state = alloca i32, align 4\l  %index.phialloca = alloca i32, align 4\l  store i32 undef, ptr %index.phialloca, align 4\l  store i32 0, ptr %index.phialloca, align 4\l  %index.reload2.alloca = alloca i32, align 4\l  %index.reload1.alloca = alloca i32, align 4\l  %index.reload.alloca = alloca i32, align 4\l  store i32 1, ptr %cff.state, align 4\l  br label %cff.dispatch\l}"];
	Node0x57c4eb7dc5f0 -> Node0x57c4eb7dc7d0;
	Node0x57c4eb7dc650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{loop_header:\l|  %index.reload3 = load i32, ptr %index.phialloca, align 4\l  %index.reload2 = load i32, ptr %index.phialloca, align 4\l  store i32 %index.reload2, ptr %index.reload2.alloca, align 4\l  %index.reload1 = load i32, ptr %index.phialloca, align 4\l  store i32 %index.reload1, ptr %index.reload1.alloca, align 4\l  %index.reload = load i32, ptr %index.phialloca, align 4\l  store i32 %index.reload, ptr %index.reload.alloca, align 4\l  %loop_cond = icmp slt i32 %index.reload3, %length\l  %cff.next = select i1 %loop_cond, i32 2, i32 3\l  store i32 %cff.next, ptr %cff.state, align 4\l  br label %cff.dispatch\l}"];
	Node0x57c4eb7dc650 -> Node0x57c4eb7dc7d0;
	Node0x57c4eb7dc770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{loop_body:\l|  %index.reload2.reload = load i32, ptr %index.reload2.alloca, align 4\l  %src_char_ptr = getelementptr i8, ptr %src_ptr, i32 %index.reload2.reload\l  %loaded_byte = load i8, ptr %src_char_ptr, align 1\l  %decrypted_byte = xor i8 %loaded_byte, 45\l  %index.reload1.reload = load i32, ptr %index.reload1.alloca, align 4\l  %dest_char_ptr = getelementptr i8, ptr %dest_ptr, i32 %index.reload1.reload\l  store i8 %decrypted_byte, ptr %dest_char_ptr, align 1\l  %index.reload.reload = load i32, ptr %index.reload.alloca, align 4\l  %next_index = add i32 %index.reload.reload, 1\l  store i32 %next_index, ptr %index.phialloca, align 4\l  store i32 1, ptr %cff.state, align 4\l  br label %cff.dispatch\l}"];
	Node0x57c4eb7dc770 -> Node0x57c4eb7dc7d0;
	Node0x57c4eb7dc830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{loop_exit:\l|  ret void\l}"];
	Node0x57c4eb7dc7d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{cff.dispatch:\l|  %cff.cur = load i32, ptr %cff.state, align 4\l  switch i32 %cff.cur, label %cff.default [\l    i32 1, label %loop_header\l    i32 2, label %loop_body\l    i32 3, label %loop_exit\l  ]\l|{<s0>def|<s1>1|<s2>2|<s3>3}}"];
	Node0x57c4eb7dc7d0:s0 -> Node0x57c4eb7ef870;
	Node0x57c4eb7dc7d0:s1 -> Node0x57c4eb7dc650;
	Node0x57c4eb7dc7d0:s2 -> Node0x57c4eb7dc770;
	Node0x57c4eb7dc7d0:s3 -> Node0x57c4eb7dc830;
	Node0x57c4eb7ef870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070" fontname="Courier",label="{cff.default:\l|  unreachable\l}"];
}
